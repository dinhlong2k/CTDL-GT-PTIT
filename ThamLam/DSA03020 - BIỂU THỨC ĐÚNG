Cho một mảng S gồm 2×N ký tự, trong đó có N ký tự ‘[’ và N ký tự ‘]’. Xâu S được gọi là viết đúng nếu S có dạng S2[S1] trong đó S, S2 là các xâu viết đúng. Nhiệm vụ của bạn là tìm số các phép đổi chỗ ít nhất các ký tự kề nhau của xâu S viết sai để  S trở thành viết đúng. Ví dụ với xâu S =”[]][][” ta có số phép đổi chỗ kề nhau ít nhất là 2.

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test là một xâu S viết sai theo nguyên tắc kể trên.
T, S thòa mãn ràng buộc: 1≤T≤100; 1≤length(S)≤100000.
Output:

Đưa kết quả trên một dòng.

Input
2

[]][][

[][][]

Output

2
0

#include<bits/stdc++.h>

using namespace std;

int main(){
	int t;
	cin>>t;
	while(t--){
		stack<char> arr;
		string s;
		cin>>s;
		int xoa=0,res=0;
		for(int i=0;i<s.length();i++){
			if(arr.size()==0) arr.push(s[i]);
			else if(s[i]==']' && arr.top()=='['){
				arr.pop();
				xoa+=2;
			}
			else if(s[i]=='[' && arr.top()==']' ){
				res+=arr.size()+xoa;
				arr.pop();
			}
			else if(s[i]==']' && arr.top()==']'){
				arr.push(s[i]);
			}else if(s[i]=='[') arr.push(s[i]);
			if(arr.size()==0) xoa=0;
		}
		cout<<res<<endl;
	}
}
