Cho n thành phố đánh số từ 1 đến n và các tuyến đường giao thông hai chiều giữa chúng, mạng lưới giao thông này được cho bởi mảng C[1…n, 1…n] ở đây C[i][j] = C[j][i] là chi phí đi đoạn đường trực tiếp từ thành phố i đến thành phố j.

Một người du lịch xuất phát từ thành phố 1, muốn đi thăm tất cả các thành phố còn lại mỗi thành phố đúng 1 lần và cuối cùng quay lại thành phố 1. Hãy chỉ ra chi phí ít nhất mà người đó phải bỏ ra.

Dữ liệu vào: Dòng đầu tiên là số nguyên n – số thành phố (n ≤ 15); n dòng sau, mỗi dòng chứa n số nguyên thể hiện cho mảng 2 chiều C.

Kết quả: Chi phí mà người đó phải bỏ ra.




INPUT

4

0 20 35 10

20 0 90 50

35 90 0 12

10 50 12 0

OUTPUT
117





#include<bits/stdc++.h>

using namespace std;
int n;
bool ok[100]={true};
long  a[20][20],b[100];
long  minnum=1000000,cmin=1000000,s=0;

void Try(int i){
	if(s + cmin *(n-i+1) >=minnum) return;
	for(int j=2;j<=n;j++){
		if(ok[j]){
			b[i]=j;
			ok[j]=false;
			s+=a[b[i-1]][b[i]];
			if(i==n){
				if(s+a[b[n]][b[1]] < minnum){
					minnum=s+a[b[n]][b[1]];
				}
			}else Try(i+1);
			s-=a[b[i-1]][b[i]];
			ok[j]=true;
		}
	}
}

int main(){
	cin>>n;
	ok[1]=false;
	b[1]=1;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			cin>>a[i][j];
			if(a[i][j]!=0) cmin=min(cmin,a[i][j]);
		}
	}
	for(int i=0;i<=100;i++){
		ok[i]=true;
	}
	Try(2);
	cout<<minnum;
}
