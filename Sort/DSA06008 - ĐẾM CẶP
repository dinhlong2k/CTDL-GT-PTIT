Cho mảng X[] gồm n phần tử và mảng Y[] gồm m phần tử. Hãy đếm số các cặp xy>yx, trong đó x€X[] và y€Y[]. Ví dụ X[] = {2, 1, 6 }, Y[] = {1, 5} ta có kết quả là 3 cặp (2, 1), (2, 5), (6, 1).

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào T bộ test. Mỗi bộ test gồm ba dòng: dòng đầu tiên đưa vào n, m tương ứng với số phần tử của mảng X[] và Y[]; dòng tiếp theo là n số X[i] của mảng X[]; dòng cuối cùng là m số của mảng Y[]; các số được viết cách nhau một vài khoảng trống.
T, n, m, X[i], Y[j] thỏa mãn ràng buộc: 1≤ T ≤100; 1≤ n, m ≤105; 0≤ X[i], Y[j] ≤103.
Output:

Đưa ra kết quả mỗi test theo từng dòng.


Input:

1
3 2
2 1 6
1 5

Output:

3

#include <bits/stdc++.h>
using namespace std;

int countEachElementOfArr1(int x, int arr2[], int m, int demSo0[]) {
    if (x == 0)
        return 0;

    if (x == 1)
        return demSo0[0];

    int* index = upper_bound(arr2, arr2 + m, x);
    int ans = (arr2 + m) - index;

    ans += (demSo0[0] + demSo0[1]);

    if (x == 2)
        ans -= (demSo0[3] + demSo0[4]);
    
    if (x == 3)
        ans += demSo0[2];

    return ans;
}

int result(int arr1[], int arr2[], int n, int m) {
    int demSo0[5] = {0};

    for (int i = 0; i < m; i++)
        if (arr2[i] < 5)
            demSo0[arr2[i]]++;

    stable_sort(arr2, arr2 + m);

    int res = 0;

    for (int i = 0; i < n; i++)
        res += countEachElementOfArr1(arr1[i], arr2, m, demSo0);

    return res;
}

int main() {
    int t, n, m;
    cin >> t;
    while (t--) {
        cin >> n >> m;

        int arr1[n], arr2[m];

        for (int i = 0; i < n; i++)
            cin >> arr1[i];
        
        for (int j = 0; j < m; j++)
            cin >> arr2[j];

        cout << result(arr1, arr2, n, m) << endl;
    }
    return 0;
}
